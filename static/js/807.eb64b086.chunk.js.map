{"version":3,"file":"static/js/807.eb64b086.chunk.js","mappings":"wNAEeA,EAAe,SAAAC,GAAK,OAAEA,EAAMC,QAAQC,KAAM,EAC1CC,EAAa,SAAAH,GAAK,OAAIA,EAAMI,MAAO,EACnCC,EAAgB,SAAAL,GAAK,OAAGA,EAAMC,QAAQK,SAAU,EAChDC,EAAY,SAAAP,GAAK,OAAEA,EAAMC,QAAQO,KAAM,EAEvCC,GAAwBC,EAAAA,EAAAA,IACnC,CAAEX,EAAgBI,IACjB,SAACF,EAASG,GACR,OAAOH,EAAQG,QAAO,SAAAO,GAAQ,OAAIA,EAASC,KAAKC,cAC9CC,SAASV,EAAOS,cAAc,GAClC,I,6BCVQE,EAAQC,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,sFAGb,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,GAAG,I,SCH1BC,EAAe,SAAHC,GAAgB,IAAXC,EAAKD,EAALC,MAC1B,OACIC,EAAAA,EAAAA,KAACV,EAAK,CAAAW,SACDF,GAGT,E,UCASG,EAASX,EAAAA,GAAAA,OAAaC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8LAGxB,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAGZ,SAAAF,GAAC,OAAEA,EAAEC,MAAMQ,OAAOC,MAAM,IAK/BC,GAAYd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAYgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,0JAG3B,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACf,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IACvB,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAEb,SAAAF,GAAC,OAAEA,EAAEC,MAAMQ,OAAOK,KAAK,IAGhCC,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAaoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,6CAC1B,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAIrBgB,EAAYrB,EAAAA,GAAAA,MAAYsB,IAAAA,GAAApB,EAAAA,EAAAA,GAAA,2IAGjB,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAC/B,SAAAF,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAKlBkB,GAAWvB,EAAAA,EAAAA,IAAOwB,EAAAA,GAAPxB,CAAoByB,IAAAA,GAAAvB,EAAAA,EAAAA,GAAA,uBACnC,SAAAC,GAAC,OAAEA,EAAEC,MAAMQ,OAAOc,GAAG,I,oBChCfC,EAAeC,EAAAA,KAAaC,MAAM,CACtCjC,KAAMgC,EAAAA,KACHE,IAAI,EAAG,0IACPC,SAAS,YACZC,OAAQJ,EAAAA,KACLE,IAAI,GAAI,gGACRG,IAAI,GAAI,aACRF,SAAS,cAGVG,EAAiB,WAC9B,IAAMvC,GAAWwC,EAAAA,EAAAA,IAAYpD,GACvBqD,GAAWC,EAAAA,EAAAA,MAcb,OACF5B,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAC6B,EAAAA,GAAM,CACLC,cAAe,CACb3C,KAAM,GACNoC,OAAQ,IAGVQ,iBAAoBb,EAEpBc,SAAU,SAACC,EAAQC,GAtBN,IAACC,IAuBAF,EArBI/C,EAASkD,MAAK,SAAA5D,GAAO,OAAG2D,EAAWhD,KAAKC,cAAciD,SAAW7D,EAAQW,KAAKC,aAAa,IAG7GkD,MAAM,GAADC,OAAIJ,EAAWhD,KAAI,4BAI1BwC,GAASa,EAAAA,EAAAA,IAAWL,IAehBD,EAAQO,WACV,EAAExC,UAGFyC,EAAAA,EAAAA,MAACrC,EAAS,CAAAJ,SAAA,EACLyC,EAAAA,EAAAA,MAAC9B,EAAS,CAAAX,SAAA,CAAE,QACPD,EAAAA,EAAAA,KAACS,EAAU,CACNkC,KAAK,OACLxD,KAAK,OAELY,MAAM,yIACNuB,UAAQ,KACbtB,EAAAA,EAAAA,KAACc,EAAQ,CAAC3B,KAAK,OAAOyD,UAAU,aAGpCF,EAAAA,EAAAA,MAAC9B,EAAS,CAAAX,SAAA,CAAE,UACRD,EAAAA,EAAAA,KAACS,EAAU,CACNkC,KAAK,MACLxD,KAAK,SAELY,MAAM,+FACNuB,UAAQ,KACbtB,EAAAA,EAAAA,KAACc,EAAQ,CAAC3B,KAAK,SAASyD,UAAU,aAG1C5C,EAAAA,EAAAA,KAACE,EAAM,CAACyC,KAAK,SAAQ1C,SAAC,iBAK9B,E,UC9Ea4C,EAAUtD,EAAAA,GAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yJASnBqD,EAAevD,EAAAA,GAAAA,OAAagB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,8LAG9B,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAGZ,SAAAF,GAAC,OAAEA,EAAEC,MAAMQ,OAAOC,MAAM,ICV/B2C,EAAe,WACxB,IAAM7D,GAAWwC,EAAAA,EAAAA,IAAY1C,GACvB2C,GAAWC,EAAAA,EAAAA,MAIjB,OACI5B,EAAAA,EAAAA,KAAA,MAAAC,SACKf,EAAS8D,KAAI,SAACxE,GACX,OACEkE,EAAAA,EAAAA,MAACG,EAAO,CAAA5C,SAAA,CAAmBzB,EAAQW,KAAK,MAAIX,EAAQ+C,QAEpDvB,EAAAA,EAAAA,KAAC8C,EAAY,CAACH,KAAK,SAASM,QAAW,kBAT/BC,EASgD1E,EAAQ2E,GAT5CxB,GAASyB,EAAAA,EAAAA,IAAcF,IAApC,IAACA,CAS2D,EAACjD,SAAC,aAFvDzB,EAAQ2E,GAK5B,KAGZ,ECvBaE,EAAa9D,EAAAA,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCACrB,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,QAAQ,EAAE,IAGxB0D,EAAc/D,EAAAA,GAAAA,MAAYgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,2FAO1B8D,EAAchE,EAAAA,GAAAA,MAAYoB,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,8DAGnB,SAAAC,GAAC,OAAEA,EAAEC,MAAMQ,OAAOqD,QAAQ,I,UCNxCC,GAAUC,E,QAAAA,MAEHC,EAAkB,WAE/B,IAAMhF,GAAS+C,EAAAA,EAAAA,IAAYhD,GACrBiD,GAAWC,EAAAA,EAAAA,MAEjB,OAEQ5B,EAAAA,EAAAA,KAACqD,EAAU,CAAApD,UACPyC,EAAAA,EAAAA,MAACY,EAAW,CAAArD,SAAA,CAAC,yBAETD,EAAAA,EAAAA,KAACuD,EAAW,CAACK,MAAOjF,EAAQwE,GAAIM,EAAUI,SAAU,SAAAC,GAAK,OAAEnC,GAASoC,EAAAA,EAAAA,GAAaD,EAAME,OAAOJ,OAAO,QAKrH,E,UCjBe,SAASK,IACpB,IAAMlF,GAAQ2C,EAAAA,EAAAA,IAAY5C,GACpBD,GAAY6C,EAAAA,EAAAA,IAAY9C,GACxB+C,GAAWC,EAAAA,EAAAA,MAMjB,OAJAsC,EAAAA,EAAAA,YAAU,WACNvC,GAASwC,EAAAA,EAAAA,MACX,GAAG,CAACxC,KAGFe,EAAAA,EAAAA,MAAA,OAAAzC,SAAA,CACIpB,IAAcmB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,iBACjBlB,IAAUiB,EAAAA,EAAAA,KAAA,KAAAC,SAAG,WAEdD,EAAAA,EAAAA,KAACH,EAAY,CAACE,MAAM,eACpBC,EAAAA,EAAAA,KAACyB,EAAc,KACfzB,EAAAA,EAAAA,KAACoE,EAAAA,EAAa,CAAAnE,SAAC,cACfD,EAAAA,EAAAA,KAAC2D,EAAe,KAChB3D,EAAAA,EAAAA,KAAC+C,EAAY,MAKxB,C","sources":["redux/selects.js","components/SectionTitle/SectionTitle.styled.js","components/SectionTitle/SectionTitle.js","components/FormAddContact/FormAdContact.styled.js","components/FormAddContact/FormAddContact.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","Pages/ContactsPage/ContactsPage.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\n  export const selectContacts=state=>state.contact.items;\n  export const selectFilter=state => state.filter;\n  export const selectIsLoading=state=> state.contact.isLoading;\n  export const selectError=state=>state.contact.error;\n\n  export const selectVisibleContacts = createSelector(\n    [ selectContacts, selectFilter],\n     (contact, filter) => {\n       return contact.filter(contacts => contacts.name.toLowerCase()\n        .includes(filter.toLowerCase()))\n     }\n    )\n\n\n// export const getContacts=state=>state.contact.items;\n// export const getFilterValue = state => state.filter;\n\n// export const getVisibleContacts = state => {\n//     const contacts = getContacts(state); \n//     const filter = getFilterValue(state); \n\n//     if (!filter) {\n//         return contacts;\n//       }\n\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     );\n//   };\n\n\n\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\ndisplay: block;\nmargin-top: 0px;\nmargin-bottom: ${p=>p.theme.spacing(10)};\ntext-align: start;\n`","import { Title } from \"./SectionTitle.styled\";\n\nexport const SectionTitle = ({title})=> {\n    return (\n        <Title>\n            {title}\n        </Title>\n    )\n    }","import {\n    Form,\n    Field,\n    ErrorMessage,\n  } from 'formik';\n\nimport styled from 'styled-components';\n\nexport const Button = styled.button`\nwidth: 100px;\ndisplay: block;\npadding: ${p=>p.theme.spacing(1)};\ntext-align: center;\nfont-size: 18px;\nborder: 1px solid ${p=>p.theme.colors.border};\nborder-radius: 5px;\nbox-shadow: rgb(169, 158, 158) 0px 2px 5px 0px;\n`;\n\nexport const FormStyle = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap:  ${p=>p.theme.spacing(2)};\n  margin-top: ${p=>p.theme.spacing(4)};\n  padding:  ${p=>p.theme.spacing(4)};\n  max-width: 400px;\n  border: 3px solid ${p=>p.theme.colors.black};\n`;\n\nexport const FieldStyle = styled(Field)`\n  padding: ${p=>p.theme.spacing(1)};\n  font: inherit;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom:  ${p=>p.theme.spacing(2)};\n  gap:  ${p=>p.theme.spacing(2)};\n  font-weight: normal;\n  text-align: start;\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\ncolor: ${p=>p.theme.colors.red};\n`\n","import { Formik } from 'formik';\nimport { Button } from './FormAdContact.styled'; \nimport { FormStyle,\n         FieldStyle,\n         FormLabel,\n         ErrorMsg} from './FormAdContact.styled';\nimport * as Yup from 'yup';\n\nimport { addContact } from 'redux/operations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selects'; \n \n         const SignupSchema = Yup.object().shape({\n           name: Yup.string()\n             .min(2, \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\")\n             .required('Required'),\n           number: Yup.string()\n             .min(10, 'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +')\n             .max(14, 'Too Long!')\n             .required('Required'),\n         });\n\nexport const FormAddContact = ()=> {\nconst contacts = useSelector(selectContacts);\nconst dispatch = useDispatch();\n\nconst addContacts =(newContact)=> {\n    \n  const newAddContact = contacts.some(contact=> newContact.name.toLowerCase().trim() === contact.name.toLowerCase());\n\n    if(newAddContact){\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } \n\n    dispatch(addContact(newContact))\n}\n\n    return (\n  <div>\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n\n      validationSchema = {SignupSchema}\n\n      onSubmit={(values, actions) => {\n        addContacts(values);\n        actions.resetForm();\n      }}\n\n    >\n      <FormStyle>\n           <FormLabel >Name\n                <FieldStyle            \n                     type=\"text\"\n                     name=\"name\"\n                    //  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                     required />\n                <ErrorMsg name=\"name\" component=\"span\"/>\n            </FormLabel>\n\n            <FormLabel >Number\n                <FieldStyle            \n                     type=\"tel\"\n                     name=\"number\"\n                    //  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                     required />\n                <ErrorMsg name=\"number\" component=\"span\"/>\n            </FormLabel>\n        \n        <Button type=\"submit\">Submit</Button>\n      </FormStyle>\n    </Formik>\n  </div>\n    )\n}","import styled from 'styled-components';\n\nexport const Contact = styled.li`\nwidth: 500px;\ndisplay: flex;\njustify-content: space-between;\nmargin-top: 15px;\nmargin-left: 20px;\nfont-weight: normal;\nfont-size: 22px;\n`\nexport const ButtonDelete = styled.button`\nwidth: 100px;\ndisplay: block;\npadding: ${p=>p.theme.spacing(1)};\ntext-align: center;\nfont-size: 18px;\nborder: 1px solid ${p=>p.theme.colors.border};\nborder-radius: 5px;\nbox-shadow: rgb(169, 158, 158) 0px 2px 5px 0px;\n`\n","import {Contact,\n        ButtonDelete} from './Contacts.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/selects';\n// import { removeContact } from 'redux/contactSlice';\nimport { deleteContact } from 'redux/operations';\n\nexport const ContactsList = ()=>{\n    const contacts = useSelector(selectVisibleContacts);\n    const dispatch = useDispatch();\n    const removeButton = (contactId)=>dispatch(deleteContact(contactId));\n//  console.log(contacts)\n    \n    return (\n        <ul>\n            {contacts.map((contact)=>{\n                return (\n                  <Contact key={contact.id}>{contact.name}:  {contact.number}\n\n                  <ButtonDelete type='button' onClick = {()=>removeButton(contact.id)}>Delete</ButtonDelete>\n                  </Contact>\n                )\n            })}\n        </ul>\n    )\n}","import styled from 'styled-components';\n\nexport const FormFilter = styled.form`\n/* padding:   ${p=>p.theme.spacing(4)}; */\n`\n\nexport const TitleFilter = styled.label`\ndisplay: flex;\nflex-direction: column;\nfont-weight: normal;\nfont-size: 22px;\n`\n\nexport const InputFilter = styled.input`\nwidth: 350px;\nheight: 30px;\nborder: 3px solid ${p=>p.theme.colors.darkblue};`","\nimport {FormFilter,\n        InputFilter,\n        TitleFilter} from './Filter.styled';\n\nimport { selectFilter } from 'redux/selects'; \nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filterSlice';\nimport { nanoid } from '@reduxjs/toolkit';\n\nconst filterId= nanoid();\n\nexport const FilterConctacts = ()=>{\n\nconst filter = useSelector(selectFilter);\nconst dispatch = useDispatch();\n\nreturn(\n    \n        <FormFilter>\n            <TitleFilter> \n                Find contacts by name\n                <InputFilter value={filter} id={filterId} onChange={event=>dispatch(changeFilter(event.target.value))}/>\n            </TitleFilter>\n        </FormFilter>\n)\n\n}","import { selectError, selectIsLoading } from 'redux/selects';\nimport {useDispatch, useSelector } from 'react-redux';\nimport { SectionTitle } from 'components/SectionTitle/SectionTitle';\nimport { FormAddContact } from 'components/FormAddContact/FormAddContact';\nimport { TitleContacts } from 'components/App.styled';\nimport { ContactsList } from 'components/Contacts/Contacts';\nimport { FilterConctacts } from 'components/Filter/Filter';\nimport { fetchContacts } from 'redux/operations';\nimport { useEffect } from 'react';\n\nexport default function ContactsPage(){\n    const error = useSelector(selectError);\n    const isLoading = useSelector(selectIsLoading);\n    const dispatch = useDispatch();\n    \n    useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n    \n    return (\n        <div>\n           {isLoading && (<p>...isLoading</p>) }\n           {error && (<p>Error</p>)}\n\n           <SectionTitle title=\"Phonebook\"/>\n           <FormAddContact/>\n           <TitleContacts>Contacts</TitleContacts>\n           <FilterConctacts/>\n           <ContactsList/>\n\n        </div>\n    )\n    \n}"],"names":["selectContacts","state","contact","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","contacts","name","toLowerCase","includes","Title","styled","_templateObject","_taggedTemplateLiteral","p","theme","spacing","SectionTitle","_ref","title","_jsx","children","Button","colors","border","FormStyle","Form","_templateObject2","black","FieldStyle","Field","_templateObject3","FormLabel","_templateObject4","ErrorMsg","ErrorMessage","_templateObject5","red","SignupSchema","Yup","shape","min","required","number","max","FormAddContact","useSelector","dispatch","useDispatch","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","trim","alert","concat","addContact","resetForm","_jsxs","type","component","Contact","ButtonDelete","ContactsList","map","onClick","contactId","id","deleteContact","FormFilter","TitleFilter","InputFilter","darkblue","filterId","nanoid","FilterConctacts","value","onChange","event","changeFilter","target","ContactsPage","useEffect","fetchContacts","TitleContacts"],"sourceRoot":""}